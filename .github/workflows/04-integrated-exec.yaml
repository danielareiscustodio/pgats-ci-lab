# CI de Nivel 4 - Disparo dos testes dentro do pipe de dev
# para arrumar o codigo pode rodar:
# ctrl + shift + P > Format Document With > Prettier Code Formatter (se nao tiver ele precisa adicionar extensao)
# e para rodar no terminal: npx prettier . --write

name: 'Execuçao Integrada'

on:
  workflow_dispatch:

jobs:
  inspecao:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4 #lint: verifica se o codigo de inspeçao esta correto

      - name: Instalando Yarn
        run: npm install -g yarn

      - name: Instalando dependencias
        run: yarn

      - name: Checando padronizaçao do codigo
        run: yarn lint

  unidade:
    runs-on: ubuntu-latest
    needs: [inspecao]

    steps:
      - uses: actions/checkout@v4

      - name: Instalando Yarn
        run: npm install -g yarn

      - name: Instalando dependencias
        run: yarn

      - name: Executando testes de unidade padronizaçao do codigo
        run: yarn test

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [inspecao]

    steps:
      # clone do projeto
      - uses: actions/checkout@v4

      # instalacao do node
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x

      # instalacao do yarn
      - name: Instalando Yarn
        run: npm install -g yarn

      # instalacao das dependencias
      - name: Instalando dependencias
        run: yarn

      # instalacao do Playwright
      - name: Instalando Playwright
        run: yarn playwright install

      # execuçao dos e2e
      - name: Executando testes e2e
        run: yarn run e2e

      # upload de artefatos (arquivos ou diretórios) gerados durante o processo de CI/CD
      # se nao for cancelado, rodar
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: report
          path: ./playwright-report

  deploy:
    runs-on: ubuntu-latest
    needs: [e2e-tests]

    steps:
      - name: Simulacao do deploy
        run: echo "simulando o deploy com sucesso"
# workflow - n1/n2/n3
#   - jobs - e2e-tests
#     - steps - instalar deps
#     - steps - executar script de teste
#     - steps - publicar resultados
#
# workflow - n4
#   - jobs - inspecao
#     - steps - instalar deps
#     - steps - executar script de lint
#   - jobs - unidade
#     - depende de: inspecao
#     - steps - instalar deps
#     - steps - executar script de teste de unidade
#   - jobs - e2e
#     - depende de: unidade
#     - steps - instalar deps
#     - steps - subir a aplicacao localmente
#     - steps - instalar browser/navegadores
#     - steps - executar scripts de testes e2e
#     - steps - publicar resultados de testes (zip/online)
#   - jobs - deploy
#     - depende de: e2e
#     - steps - instalar deps
#     - steps - gerar artefatos da aplicacao
#     - steps - publicar artefatos de algum ambiente
#
# hoje o mais usado é inspecao com unidade, paralelismo com e2e e deploy